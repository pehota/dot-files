[core]
  excludesfile = ~/.gitignore
  quotepath = false
[user]
  name = Dimitar Apostolov
  email =
  useconfigonly = true
[merge]
  ff = no
  tool = vimdiff
[diff]
  tool = vimdiff
[difftool]
  prompt = false
[mergetool]
  prompt = true
[mergetool "diffmerge"]
  trustExitCode = true
  cmd = /usr/local/bin/diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"
[mergetool "vimdiff"]
  cmd = nvim -d $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'
[filter "lfs"]
  smudge = git-lfs smudge %f
  required = true
  clean = git-lfs clean %f
[alias]
  cp = cherry-pick
  co = checkout
  cm = "!sh -c 'git bm | grep -v \"\\*\" | grep -v master | grep -v edge | grep -v develop | xargs -n 1 git branch -d'"
  richlog = log --all --graph --decorate --oneline --simplify-by-decoration
  update = "!sh -c 'git fetch --prune && git pull --rebase'"
  poop = "!sh -c 'git diff-index HEAD --quiet --exit-code; NEEDS_STASH=$?; if [ \"$NEEDS_STASH\" -eq \"1\" ] ; then git stash; else echo \"Nothing to stash.\"; fi; git checkout \"$0\" && git pull origin \"$0\"; if [ \"$NEEDS_STASH\" -eq \"1\" ] ; then git stash pop; fi;'"
  cbn = "!sh -c 'git symbolic-ref --short HEAD | pbcopy'"
  ss = stash save -u
  sl = stash list
  sd = stash drop
  sa = stash apply
  sp = stash pop
  ssh = stash show
  db = branch -D
  rb = branch -m
  rcb = "!sh -c 'CURRENT_BRANCH=$(git symbolic-ref --short HEAD ) &&  git rb $CURRENT_BRANCH $0 && unset CURRENT_BRANCH'"
  unstage = reset HEAD
  bm = branch --merged
  ulc = reset --soft HEAD~ #undoes the last, not-pushed commit
  pss = "push -u origin HEAD"
  deployed = "!f(){ git branch -r --contains $1 | cut -f1 -d'/' | sort | uniq; }; f"
  ri = "!sh -c 'git rebase -i HEAD~$0'"
  ai = add -i
  ls = branch
  sb = "!sh -c '(git branch | fzf-tmux -d 20) || git branch'"
  ; lsa = "!sh -c 'git for-each-ref --format=\'%(committerdate) %09 %(authorname) %09 %(refname)\' | sort -k5n -k2M -k3n -k4n'"
  cc = "!sh -c 'git cherry -v $0 | grep +'"
  commend = commit --amend --no-edit
  please = push --force-with-lease origin HEAD
  st = status --short --branch
  cam = commit -am
  lb = "!sh -c 'git shortlog -s | sort -nr'"
  debranch = "!sh -c 'git branch | grep -v master | xargs git branch -D'"
  cim = commit -m
  dc = "!sh -c 'git diff --name-only $0 | wc -l'"
	lsr = branch -r
[help]
  autocorrect = -1
[init]
	templatedir = ~/.git_templates
